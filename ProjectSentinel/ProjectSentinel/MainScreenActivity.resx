<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/4gIc
        SUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQVBQTAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApkZXNjAAAA/AAAAF5jcHJ0AAABXAAAAAt3dHB0AAABaAAA
        ABRia3B0AAABfAAAABRyWFlaAAABkAAAABRnWFlaAAABpAAAABRiWFlaAAABuAAAABRyVFJDAAABzAAA
        AEBnVFJDAAABzAAAAEBiVFJDAAABzAAAAEBkZXNjAAAAAAAAAANjMgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB0ZXh0AAAAAEZCAABYWVogAAAAAAAA9tYAAQAAAADTLVhZWiAAAAAAAAADFgAAAzMAAAKkWFlaIAAA
        AAAAAG+iAAA49QAAA5BYWVogAAAAAAAAYpkAALeFAAAY2lhZWiAAAAAAAAAkoAAAD4QAALbPY3VydgAA
        AAAAAAAaAAAAywHJA2MFkghrC/YQPxVRGzQh8SmQMhg7kkYFUXdd7WtwegWJsZp8rGm/fdPD6TD////b
        AEMAAgEBAgEBAgICAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcKDQoKCwwMDAwHCQ4P
        DQwOCwwMDP/bAEMBAgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDP/AABEIAJQAfwMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQID
        BAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR
        8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp
        6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUE
        BAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3
        ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeo
        qaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/
        AP0mubhk/wBXMp+tU433J23U4qsPVVj/AN+q9vOSm9opN3p2r8vqNPY+spkN2uAu3cu3uOtVXVd7blXa
        1Xb7Vl+xNIsMm5V3dKzLSaTXNPRoYwm/7zM3yw/71Zbvc6IEz6c12P4mX+9/FT9L0eO3g8sXMjL/ALTV
        4/8AHf8Abx+Gv7O/7u81p7q+PW2jkVmi/wB7ArwG4/4Lq/D61mxF4S15l/2p0/8Aia2+rVZq8IhKXc+2
        7a5aW32yBV8n7iSD5T9KVY4ri0juIlX5eoXIr4Y0b/gup4BvdRMl94T8RJB2xMmV+ny16r8L/wDgqH8G
        /H0sdnH4guLRrjot3HsxT+p4jeSCMj6XGqw2U+65zA/9xgW/9BxTZ9YuJX/48k2/Q/41keD/AIqeGfFl
        l52k6pY6m237wmEhz+VbFzqEmnoy7vO3fc2/1pRpyj8RZStop/8Aj3Mwgj/56NVqOWFDH8sM0kP3RJGS
        B+tDvcXcCySW9uyL98YJ/Lmq/wDaLWMbMG3OvqKb0AbbW0lpCGW4SSZf9YMHH4Uy2uJLeV7hvKlhjG2M
        buZKfaXnm3UkxaGJfTHWp10uKQxyeey+T91ABtH6VpTAZazvN5bNEo8voB3+tPkvG1IRvC6xqo5ElOiE
        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
</value>
  </data>
</root>