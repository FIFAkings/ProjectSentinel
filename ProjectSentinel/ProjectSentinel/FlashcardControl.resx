<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>