<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>